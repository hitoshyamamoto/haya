version: "1.0"
project: haya
description: "Hayai project multi-database configuration"
networks:
  - hayai-network
volumes:
  - postgres-data
  - redis-data
  - influxdb2-data

databases:
  # PostgreSQL Database
  main-postgres:
    engine: postgresql
    port: 5432
    environment:
      # Database Configuration
      POSTGRES_DB: hayai_main
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: secure_password_123
      POSTGRES_HOST_AUTH_METHOD: md5
      
      # Character Set and Locale
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --locale=en_US.UTF-8"
      
      # Performance Configuration
      POSTGRES_SHARED_BUFFERS: "256MB"
      POSTGRES_EFFECTIVE_CACHE_SIZE: "1GB"
      POSTGRES_WORK_MEM: "4MB"
      POSTGRES_MAINTENANCE_WORK_MEM: "64MB"
      
      # Connection Configuration
      POSTGRES_MAX_CONNECTIONS: "100"
      POSTGRES_LISTEN_ADDRESSES: "*"
      
      # Logging Configuration
      POSTGRES_LOG_DESTINATION: "stderr"
      POSTGRES_LOGGING_COLLECTOR: "on"
      POSTGRES_LOG_STATEMENT: "all"
      POSTGRES_LOG_MIN_DURATION_STATEMENT: "1000"
      
      # Backup Configuration
      POSTGRES_ARCHIVE_MODE: "on"
      POSTGRES_WAL_LEVEL: "replica"
      
    volumes:
      - "postgres-data:/var/lib/postgresql/data"
      - "./backups/postgres:/backups"
    networks:
      - hayai-network
    memory: "512m"
    restart: "unless-stopped"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d hayai_main"]
      interval: "30s"
      timeout: "10s"
      retries: 3

  # Redis Cache Database
  cache-redis:
    engine: redis
    port: 6379
    environment:
      # Authentication
      REDIS_PASSWORD: redis_secure_password_456
      
      # Persistence Configuration
      REDIS_AOF_ENABLED: "yes"
      REDIS_RDB_ENABLED: "yes"
      REDIS_SAVE: "900 1 300 10 60 10000"
      
      # Memory Management
      REDIS_MAXMEMORY: "256mb"
      REDIS_MAXMEMORY_POLICY: "allkeys-lru"
      REDIS_MAXMEMORY_SAMPLES: "5"
      
      # Network Configuration
      REDIS_BIND: "0.0.0.0"
      REDIS_PORT: "6379"
      REDIS_TIMEOUT: "300"
      REDIS_KEEPALIVE: "60"
      
      # Performance Configuration
      REDIS_DATABASES: "16"
      REDIS_HASH_MAX_ZIPLIST_ENTRIES: "512"
      REDIS_HASH_MAX_ZIPLIST_VALUE: "64"
      REDIS_LIST_MAX_ZIPLIST_SIZE: "-2"
      REDIS_SET_MAX_INTSET_ENTRIES: "512"
      REDIS_ZSET_MAX_ZIPLIST_ENTRIES: "128"
      REDIS_ZSET_MAX_ZIPLIST_VALUE: "64"
      
      # Logging Configuration
      REDIS_LOGLEVEL: "notice"
      REDIS_LOGFILE: "/var/log/redis/redis-server.log"
      
      # Security Configuration
      REDIS_PROTECTED_MODE: "no"
      REDIS_RENAME_COMMAND_FLUSHDB: "FLUSHDB_HAYAI_RENAME"
      REDIS_RENAME_COMMAND_FLUSHALL: "FLUSHALL_HAYAI_RENAME"
      
    volumes:
      - "redis-data:/data"
      - "./backups/redis:/backups"
      - "./logs/redis:/var/log/redis"
    networks:
      - hayai-network
    memory: "256m"
    restart: "unless-stopped"
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping || exit 1"]
      interval: "30s"
      timeout: "10s"
      retries: 3

  # InfluxDB 2.x Time Series Database
  metrics-influxdb2:
    engine: influxdb2
    port: 8086
    environment:
      # Database Configuration
      INFLUXDB_DB: hayai_metrics
      INFLUXDB_ADMIN_USER: admin
      INFLUXDB_ADMIN_PASSWORD: influx_secure_password_789
      INFLUXDB_USER: metrics_user
      INFLUXDB_USER_PASSWORD: metrics_password_101
      
      # Authentication & Security
      INFLUXDB_HTTP_AUTH_ENABLED: "true"
      INFLUXDB_HTTP_HTTPS_ENABLED: "false"
      INFLUXDB_HTTP_FLUX_ENABLED: "true"
      
      # Organization & Bucket Configuration
      DOCKER_INFLUXDB_INIT_MODE: "setup"
      DOCKER_INFLUXDB_INIT_USERNAME: "admin"
      DOCKER_INFLUXDB_INIT_PASSWORD: "influx_secure_password_789"
      DOCKER_INFLUXDB_INIT_ORG: "hayai-org"
      DOCKER_INFLUXDB_INIT_BUCKET: "hayai-metrics"
      DOCKER_INFLUXDB_INIT_ADMIN_TOKEN: "hayai-admin-token-super-secret-123456789"
      
      # Performance Configuration
      INFLUXDB_DATA_MAX_SERIES_PER_DATABASE: "1000000"
      INFLUXDB_DATA_MAX_VALUES_PER_TAG: "100000"
      INFLUXDB_COORDINATOR_WRITE_TIMEOUT: "10s"
      INFLUXDB_COORDINATOR_MAX_CONCURRENT_QUERIES: "0"
      INFLUXDB_COORDINATOR_QUERY_TIMEOUT: "0s"
      
      # Retention Policy
      INFLUXDB_DATA_RETENTION_AUTO_CREATE: "true"
      INFLUXDB_DATA_RETENTION_CHECK_ENABLED: "true"
      INFLUXDB_DATA_RETENTION_CHECK_PERIOD: "30m"
      
      # HTTP Configuration
      INFLUXDB_HTTP_BIND_ADDRESS: ":8086"
      INFLUXDB_HTTP_LOG_ENABLED: "true"
      INFLUXDB_HTTP_SUPPRESS_WRITE_LOG: "false"
      INFLUXDB_HTTP_ACCESS_LOG_PATH: "/var/log/influxdb/access.log"
      
      # Logging Configuration
      INFLUXDB_LOGGING_LEVEL: "info"
      INFLUXDB_LOGGING_FORMAT: "auto"
      INFLUXDB_LOGGING_SUPPRESS_LOGO: "false"
      
      # Storage Configuration
      INFLUXDB_STORAGE_ENGINE: "tsm1"
      INFLUXDB_DATA_DIR: "/var/lib/influxdb2"
      INFLUXDB_DATA_WAL_DIR: "/var/lib/influxdb2/wal"
      
      # Engine Configuration
      INFLUXDB_DATA_CACHE_MAX_MEMORY_SIZE: "1gb"
      INFLUXDB_DATA_CACHE_SNAPSHOT_MEMORY_SIZE: "25mb"
      INFLUXDB_DATA_CACHE_SNAPSHOT_WRITE_COLD_DURATION: "10m"
      INFLUXDB_DATA_COMPACT_FULL_WRITE_COLD_DURATION: "4h"
      
    volumes:
      - "influxdb2-data:/var/lib/influxdb2"
      - "./backups/influxdb2:/backups"
      - "./logs/influxdb2:/var/log/influxdb"
      - "./config/influxdb2:/etc/influxdb2"
    networks:
      - hayai-network
    memory: "512m"
    restart: "unless-stopped"
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8086/ping || exit 1"]
      interval: "30s"
      timeout: "10s"
      retries: 3

# Global Configuration
global:
  # Default network settings
  network:
    name: hayai-network
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: "172.20.0.0/16"
  
  # Default volume settings
  volumes:
    driver: local
    
  # Default resource limits
  resources:
    default_memory: "256m"
    default_cpu_limit: "1"
    
  # Default restart policy
  restart_policy: "unless-stopped"
  
  # Default logging configuration
  logging:
    driver: "json-file"
    options:
      max-size: "10m"
      max-file: "3"
